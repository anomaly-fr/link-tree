{"version":3,"sources":["me.png","components/Button.js","App.js","reportWebVitals.js","index.js"],"names":["logoIcon","name","className","size","Button","dark","link","onClick","newWindow","window","open","opener","App","useState","darkMode","isDarkMode","src","me","map","social","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAAe,MAA0B,+B,4BC8BnCA,EAAW,SAACC,GAChB,MAAa,cAATA,EACK,cAAC,IAAD,CAAoBC,UAAU,OAAOC,KAAK,QAC/B,YAATF,EACF,cAAC,IAAD,CAAkBC,UAAU,OAAOC,KAAK,QAC/B,WAATF,EACA,cAAC,IAAD,CAAiBC,UAAU,OAAOC,KAAK,QAC9B,aAATF,EACA,cAAC,IAAD,CAAmBC,UAAU,OAAOC,KAAK,aAD7C,GAIQC,EAhCA,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,KAAMJ,EAAiB,EAAjBA,KAAMK,EAAW,EAAXA,KAC5B,OACE,sBACEC,QAAS,WACP,IAAMC,EAAYC,OAAOC,KAAKJ,EAAM,SAAU,uBAC1CE,IAAWA,EAAUG,OAAS,OAEpCT,UAAWG,EAAO,cAAgB,SALpC,UAOE,qBAAKH,UAAU,eAAf,SACE,mBAAGA,UAAU,oBAAb,SAAkCD,MAEpC,qBAAKC,UAAU,cAAf,SACE,qBAAKA,UAAWG,EAAO,mBAAqB,cAA5C,SACGL,EAASC,W,OCwDLW,EAzEH,WAAO,IAAD,EACeC,oBAAS,GADxB,mBACTC,EADS,KACCC,EADD,KAoBhB,OACE,sBAAKb,UAAWY,EAAW,sBAAwB,iBAAnD,UACE,sBAAKZ,UAAWY,EAAW,kBAAoB,aAA/C,UACE,qBAAKZ,UAAWY,EAAW,uBAAyB,kBAApD,SACE,mBAAGZ,UAAU,kBAAb,wBAEF,qBAAKA,UAAU,SAAf,SACGY,EACC,cAAC,IAAD,CACEP,QAAS,kBAAMQ,GAAYD,IAC3BX,KAAK,KACLD,UAAU,SAGZ,cAAC,IAAD,CACEK,QAAS,kBAAMQ,GAAYD,IAC3BX,KAAK,KACLD,UAAU,cAKlB,qBAAKA,UAAU,aAAf,SAEE,qBAAKc,IAAKC,EAAIf,UAAU,aAG1B,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,qBAAKA,UAAU,YAAf,SACE,mBAAGA,UAAWY,EAAW,YAAc,OAAvC,gEAMJ,qBAAKZ,UAAU,cAAf,SAtDQ,CACZ,CACED,KAAM,YACNK,KAAM,yCAER,CACEL,KAAM,UACNK,KAAM,kCAER,CACEL,KAAM,SACNK,KAAM,iCAER,CACEL,KAAM,WACNK,KAAM,4CAwCKY,KAAI,SAACC,EAAQC,GAClB,OACE,cAAC,EAAD,CACEf,KAAMS,EAENb,KAAMkB,EAAOlB,KACbK,KAAMa,EAAOb,MAFRc,eCvDNC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.faa2b896.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/me.2701928d.png\";","import React, { useState } from 'react'\r\nimport './Button.css'\r\nimport {\r\n  AiOutlineInstagram,\r\n  AiOutlineTwitter,\r\n  AiOutlineGithub,\r\n  AiOutlineLinkedin,\r\n} from 'react-icons/ai'\r\n\r\nconst Button = ({ dark, name, link }) => {\r\n  return (\r\n    <div\r\n      onClick={() => {\r\n        const newWindow = window.open(link, '_blank', 'noopener,noreferrer')\r\n        if (newWindow) newWindow.opener = null\r\n      }}\r\n      className={dark ? 'button-dark' : 'button'}\r\n    >\r\n      <div className=\"button-title\">\r\n        <p className=\"button-title-text\">{name}</p>\r\n      </div>\r\n      <div className=\"button-edge\">\r\n        <div className={dark ? 'button-logo-dark' : 'button-logo'}>\r\n          {logoIcon(name)}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst logoIcon = (name) => {\r\n  if (name === 'Instagram') {\r\n    return <AiOutlineInstagram className=\"logo\" size=\"2vw\" />\r\n  } else if (name === 'Twitter')\r\n    return <AiOutlineTwitter className=\"logo\" size=\"2vw\" />\r\n  else if (name === 'GitHub')\r\n    return <AiOutlineGithub className=\"logo\" size=\"2vw\" />\r\n  else if (name === 'LinkedIn')\r\n    return <AiOutlineLinkedin className=\"logo\" size=\"2vw\" />\r\n}\r\n\r\nexport default Button\r\n","import me from './me.png'\nimport './App.css'\nimport { React, useState } from 'react'\nimport Button from './components/Button'\nimport { HiMoon, HiOutlineMoon } from 'react-icons/hi'\n\nconst App = () => {\n  const [darkMode, isDarkMode] = useState(false)\n  const links = [\n    {\n      name: 'Instagram',\n      link: 'https://www.instagram.com/anomaly_fr/',\n    },\n    {\n      name: 'Twitter',\n      link: 'https://twitter.com/anomaly_fr',\n    },\n    {\n      name: 'GitHub',\n      link: 'https://github.com/anomaly-fr',\n    },\n    {\n      name: 'LinkedIn',\n      link: 'https://www.linkedin.com/in/anomaly-fr/',\n    },\n  ]\n  return (\n    <div className={darkMode ? 'app-background-dark' : 'app-background'}>\n      <div className={darkMode ? 'app-header-dark' : 'app-header'}>\n        <div className={darkMode ? 'app-header-left-dark' : 'app-header-left'}>\n          <p className=\"app-header-text\">Anam Ali</p>\n        </div>\n        <div className=\"switch\">\n          {darkMode ? (\n            <HiMoon\n              onClick={() => isDarkMode(!darkMode)}\n              size=\"20\"\n              className=\"moon\"\n            />\n          ) : (\n            <HiOutlineMoon\n              onClick={() => isDarkMode(!darkMode)}\n              size=\"20\"\n              className=\"moon\"\n            />\n          )}\n        </div>\n      </div>\n      <div className=\"circle-pos\">\n        {/* <div className=\"circle\"> */}\n        <img src={me} className=\"circle\"></img>\n        {/* </div> */}\n      </div>\n      <div className=\"app-body\">\n        <div className=\"app-body-upper\">\n          <div className=\"text-area\">\n            <p className={darkMode ? 'text-dark' : 'text'}>\n              \"GDSC Lead; Developer; Ardent Jane Austen Fan\"\n            </p>\n          </div>\n        </div>\n\n        <div className=\"button-area\">\n          {links.map((social, index) => {\n            return (\n              <Button\n                dark={darkMode}\n                key={index}\n                name={social.name}\n                link={social.link}\n              />\n            )\n          })}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}